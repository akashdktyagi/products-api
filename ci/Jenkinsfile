pipeline {
    agent any

    stage('Sonar Analysis'){
        when{
            expression{
                return params.SONAR_STAGE==true
            }
        }
        steps {
            withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'sonarToken')]) {
                sh ('mvn verify --no-transfer-progress org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yantraCloudApp_products-api -Dsonar.login=$sonarToken')
            }

        }
    }

    stage('Build and Generate Docker Image') {
        when{
            expression{
                return params.RELEASE_IMAGE==true
            }
        }
        steps {
            withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'password', usernameVariable: 'username')]) {
                //sh 'mvn clean install --no-transfer-progress -DskipTests -Djib.to.auth.username=$username -Djib.to.auth.password=$password'
                sh 'mvn clean install --no-transfer-progress -Djib.to.auth.username=$username -Djib.to.auth.password=$password'
            }
        }
    }

}
